{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonjo\\\\Desktop\\\\Workspace\\\\Web_practice\\\\my-app\\\\src\\\\components\\\\Movies.js\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie({\n  id,\n  coverImg,\n  title,\n  summary,\n  genres\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverImg,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/movie\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: genres.length > 0 ? genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No Genre Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = Movie;\nMovie.propTypes = {\n  id: PropTypes.string.isRequired,\n  coverImg: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string)\n};\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["PropTypes","Link","jsxDEV","_jsxDEV","Movie","id","coverImg","title","summary","genres","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","genre","_c","propTypes","string","isRequired","arrayOf","$RefreshReg$"],"sources":["C:/Users/bonjo/Desktop/Workspace/Web_practice/my-app/src/components/Movies.js"],"sourcesContent":["import PropTypes from \"prop-types\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Movie({id, coverImg, title, summary, genres}) {\r\n    return (\r\n        <div id={id}>\r\n            <img src={coverImg} alt=\"\"></img>\r\n            <h2>\r\n              <Link to=\"/movie\">{title}</Link>\r\n            </h2>\r\n            <p>{summary}</p>\r\n            <ul>\r\n              {genres.length>0 ? (genres.map(genre => (\r\n                <li>{genre}</li>)\r\n              )):<li>No Genre Data</li>}\r\n            </ul>\r\n            <hr />\r\n            <br />\r\n          </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    coverImg: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string),\r\n}\r\n\r\nexport default Movie"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAAQC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,KAAKA,CAAC;EAACC,EAAE;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAE;EACnD,oBACIN,OAAA;IAAKE,EAAE,EAAEA,EAAG;IAAAK,QAAA,gBACRP,OAAA;MAAKQ,GAAG,EAAEL,QAAS;MAACM,GAAG,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjCb,OAAA;MAAAO,QAAA,eACEP,OAAA,CAACF,IAAI;QAACgB,EAAE,EAAC,QAAQ;QAAAP,QAAA,EAAEH;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACLb,OAAA;MAAAO,QAAA,EAAIF;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBb,OAAA;MAAAO,QAAA,EACGD,MAAM,CAACS,MAAM,GAAC,CAAC,GAAIT,MAAM,CAACU,GAAG,CAACC,KAAK,iBAClCjB,OAAA;QAAAO,QAAA,EAAKU;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACjB,CAAC,gBAAEb,OAAA;QAAAO,QAAA,EAAI;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACLb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB;AAACK,EAAA,GAjBQjB,KAAK;AAmBdA,KAAK,CAACkB,SAAS,GAAG;EACdjB,EAAE,EAAEL,SAAS,CAACuB,MAAM,CAACC,UAAU;EAC/BlB,QAAQ,EAAEN,SAAS,CAACuB,MAAM,CAACC,UAAU;EACrCjB,KAAK,EAAEP,SAAS,CAACuB,MAAM,CAACC,UAAU;EAClChB,OAAO,EAAER,SAAS,CAACuB,MAAM,CAACC,UAAU;EACpCf,MAAM,EAAET,SAAS,CAACyB,OAAO,CAACzB,SAAS,CAACuB,MAAM;AAC9C,CAAC;AAED,eAAenB,KAAK;AAAA,IAAAiB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}